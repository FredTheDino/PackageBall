mod Maybe

enum Maybe a = Just a | Nothing

def is_just
: Maybe a -> Bool
: x
= match x with Maybe:Just a -> true with Maybe:Nothing -> false end

def map
  : (a -> b) -> Maybe a -> Maybe b
  : f m = match m
          with Maybe:Nothing -> (Maybe:Nothing)
          with Maybe:Just x -> Maybe:Just (f x)
          end

def join
  : Maybe (Maybe a) -> Maybe a
  : m = match m
          with Maybe:Nothing -> (Maybe:Nothing)
          with Maybe:Just x -> x
          end

def and_then
  : (a -> Maybe b) -> Maybe a -> Maybe b
  : f m = map f m # join

def default
  : a -> Maybe a -> a
  : d m = match m
          with Maybe:Just x -> x
          with Maybe:Nothing -> d
          end

