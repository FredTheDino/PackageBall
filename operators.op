unary ` Preamble._neg
unary ! Preamble._not
unary ^ Math.int_to_real
unary ~ F.with_unit

binr ++ 4 Preamble.concat 
binr + 4 Preamble._add 
binr - 4 Preamble._sub
binl * 3 Preamble._mul 
binr / 3 Preamble._div 

binr ' 6 Preamble._call
binr # 7 Preamble._revCall
binr *> 7 Render.and
binr $ 8 Preamble._call
binr << 9 Curry.compose_flip
binr >> 9 Curry.compose

binr == 8 Preamble._eq
binr != 8 Preamble._neq
binr < 8 Preamble._lt
binr <= 8 Preamble._lteq

binr || 4 Preamble._or
binr && 3 Preamble._and
