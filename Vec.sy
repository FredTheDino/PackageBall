mod Vec

type Vec = { x : Real, y : Real }

def vec
: Real -> Real -> Vec
: x y = { x, y }

def add
: Vec -> Vec -> Vec
: { x: xa, y: ya } { x: xb, y: yb }
= { x: xa + xb, y: ya + yb }

def sub
: Vec -> Vec -> Vec
: { x: xa, y: ya } { x: xb, y: yb }
= { x: xa - xb, y: ya - yb }

def mul
: Real -> Vec -> Vec
: s { x, y }
= { x: s * x, y: s * y }

def dot
: Vec -> Vec -> Real
: { x: xa, y: ya } { x: xb, y: yb }
= (xa * xb) + (ya * yb)

def len_sq
: Vec -> Real
: a = dot a a

def len
: Vec -> Vec -> Real
:= len_sq >> Math.sqrt
