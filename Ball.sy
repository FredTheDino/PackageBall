mod Ball

type Ball = { pos : Vec, dir : Vec }

def update : Real -> Player -> Box -> Box : dt player { pos, dir } = 
  let player_pos = Player.pos player
  in
 { pos: dir # Vec.mul (dt * speed) # Vec.add pos
 , dir: 
      Bool.iff
        (Circle.hit { p: player_pos, r: Player.rad } { p: pos, r: rad })
        (Vec.sub pos player_pos # Vec.normalize)
        (dir)
 }

def rad ::= 10.0

def draw : Ball -> Render : { pos } = Render.color Render.blue *> Render.circle pos rad
def draw_full : Box -> Render : { pos } = Render.color Render.white *> Render.circle pos rad

def speed : Real := 100.0

def margin : Real := 50.0

def is_inside_screen : Ball -> Bool : { pos: { x, y }, dir: _ } =
    let height = margin + Render.height Unit.unit
    let width = margin + Render.width Unit.unit
    in
    ((`margin) <= x)
    && (x <= width)
    && ((`margin) <= y) 
    && (y <= height)
