mod Main

type State = { x: Int , p : Player}
type Input = { left: Bool, right: Bool, up: Bool, down: Bool }

def spy : a -> a := foreign -[[
    function(x)
        print(x)
        return x
    end
]]-

def init : Int -> State : _ = { x: 2, p: { x:200, y:200 } }

def update : Real -> Input -> State -> State : dt input { p, x } =
  { p: Player.update dt input p
  , x }

def draw
<<<<<<< HEAD
: State -> Render Unit
: { p } = let v = Spawner.outsideScreen Unit.unit 
    in Render.circle p (Math.random Unit.unit * 100.0) >>= (\_ -> Graphics.printf "Hello world" 0.0 0.0 300.0) >>= (\_ -> Render.circle v 50.0)
=======
: State -> Render
: { p } =
    let {x, y} = Spawner.outsideScreen Unit.unit 
    in Render.circle p (Math.random Unit.unit * 100.0)
       *> (Render.printf "Hello world" x y 300.0)
>>>>>>> refs/remotes/origin/main
